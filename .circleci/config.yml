version: 2

defaults: &defaults
  docker:
    - image: circleci/python:3.9.5
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      pip install poetry
      poetry install

jobs:
  part_14_test_backend:
    <<: *defaults
    working_directory: ~/project/part-14-send-email-in-background/backend/app
    steps:
      - checkout:
          path: ~/project
      - *prepare_venv
      - run:
          name: Runnning app tests
          command: |
            PYTHONPATH=. poetry run pytest app/tests

  part_14_deploy_app_container_to_heroku:
    <<: *defaults
    steps:
      - setup_remote_docker:
          # Supported versions: https://circleci.com/docs/2.0/building-docker-images/#docker-version
          version: 20.10.6
      - checkout:
          path: ~/project
      - run:
          name: Build image
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            cd part-14-send-email-in-background && make build-app-heroku
      - run:
          name: Push Image to Heroku
          command: |
            # Push the built container to the Heroku image registry
            cd part-14-send-email-in-background && make push-app-heroku
      - run:
          name: Release to Heroku
          command: |
            cd part-14-send-email-in-background && make release-heroku
            

  part_14_deploy_frontend:
    docker:
      - image: cimg/node:17.4.0
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Deploy Frontend
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            make -C ./part-14-send-email-in-background deploy-frontend-heroku

workflows:
  version: 2
  part_14:
    jobs:
      - part_14_test_backend
      - part_14_deploy_app_container_to_heroku:
          requires:
            - part_14_test_backend
          # filters:
          #   branches:
          #     only:
          #       - main
      - part_14_deploy_frontend:
          filters:
            branches:
              only:
                - main
